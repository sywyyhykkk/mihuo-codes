<template>
	<uni-popup type="bottom" :customeStyle="{borderRadius:'20rpx',background:'#fff'}" ref="areaChoose" zIndex='99999'
		borderRadius="20">
		<view class="select-city-wrap" :style="'height:'+windowHeight">
			<!-- 内容 -->
			<view class="top getHeight" id="top" style="background-color: #fff;">
				<text>选择服务区</text>
				<image src="/static/images/icon_close/close.png" class="iconfont close" @click.stop="close" />
			</view>
			<scroll-view class="scroll" :scroll-into-view="scrollIntoId" :scroll-y="true" :scroll-with-animation="true"
				:show-scrollbar="false" :style="'height:'+windowHeight">
				<!--定位-->
				<view style="background-color: #fff;">
					<view>
						<text class="name" id="current">当前/历史</text>
						<view class="city-item" v-if="city">
							<view class="city-item-view" style="display: flex;">
								<image class='address-icon' src='/static/images/address_mini_icon.png' />
								<text class="city-item-text">
									{{position}}
								</text>
							</view>
						</view>
					</view>
					<!-- 热门城市 -->
					<text class="name">热门城市</text>
					<view class="city-item">
						<view :class="city.id == cityitem.id?'city-item-viewa':'city-item-view' "
							v-for="(cityitem, i) in hotCitys" :key="cityitem.id" @click="onSelect(cityitem)">
							<text :class="city.id== cityitem.id?'city-item-texta':'city-item-text' ">
								{{ cityitem.address  || cityitem.shortName }}
							</text>
						</view>
					</view>
				</view>
				<view :id="item.letter" v-for="item in cityData" :key="item.letter">
					<!-- ABCD -->
					<view class="letter-content">
						<text class="letter">{{ item._id }}</text>
					</view>
					<!-- 城市 -->
					<view class="city-item-list">
						<view :class="city.id== cityitem.id?'city-item-viewa':'city-item-view' "
							v-for="(cityitem, i) in item.data" :key="cityitem.id" @click="onSelect(cityitem)">
							<text
								:class="city.id== cityitem.id?'city-item-texta':'city-item-text' ">{{ cityitem.address || cityitem.shortName }}</text>
						</view>
					</view>
				</view>
			</scroll-view>

			<!-- 右边锚点 -->
			<view class="anchor" @touchstart="start" @touchmove="move" @touchend="end" v-if="sliding">
				<view>
					<view class="anchor-item" @click="scrollIntoId='current' "><text class="anchor-text">#</text></view>
					<view class="anchor-item" v-for="(item,index) in anchorArr" :key="index" @click="scrollIntoId=item"
						:class="{'chooseItem':scrollIntoId==item}">
						<text class="anchor-text">{{item}}</text>
					</view>
				</view>
			</view>
			<view class="anchor" v-else>
				<view>
					<view class="anchor-item" @click="scrollIntoId='current' "><text class="anchor-text">#</text></view>
					<view class="anchor-item" v-for="(item,index) in anchorArr" :key="index" @click="scrollIntoId=item">
						<text class="anchor-text">{{item}}</text>
					</view>
				</view>
			</view>
		</view>
	</uni-popup>
</template>
<script>
	import { deepClone } from '@/plugins/utils.js'
	// hotCitys  热门城市  
	// value 当前选中城市
	// windowHeight  scroll的高 也是滑块的高 记得带单位!!! px rpx upx都支持
	// sliding 是否开始滑动选择 默认开启  false true
	// @onSelect   点击切换城市事件 参数为城市名称
	// import cityData from './cityData.js'
	let anchorArr = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "W", "X",
		"Y", "Z"
	];
	let kList = [{
			sort: 1,
			_id: 'A',
			data: []
		}, {
			sort: 2,
			_id: 'B',
			data: []
		}, {
			sort: 3,
			_id: 'C',
			data: []
		},
		{
			sort: 4,
			_id: 'D',
			data: []
		}, {
			sort: 5,
			_id: 'E',
			data: []
		}, {
			sort: 6,
			_id: 'F',
			data: []
		},
		{
			sort: 7,
			_id: 'G',
			data: []
		}, {
			sort: 8,
			_id: 'H',
			data: []
		}, {
			sort: 9,
			_id: 'I',
			data: []
		},
		{
			sort: 10,
			_id: 'J',
			data: []
		}, {
			sort: 11,
			_id: 'K',
			data: []
		}, {
			sort: 12,
			_id: 'L',
			data: []
		},
		{
			sort: 13,
			_id: 'M',
			data: []
		}, {
			sort: 14,
			_id: 'N',
			data: []
		}, {
			sort: 15,
			_id: 'O',
			data: []
		},
		{
			sort: 16,
			_id: 'P',
			data: []
		}, {
			sort: 17,
			_id: 'Q',
			data: []
		}, {
			sort: 18,
			_id: 'R',
			data: []
		},
		{
			sort: 19,
			_id: 'S',
			data: []
		}, {
			sort: 20,
			_id: 'T',
			data: []
		}, {
			sort: 21,
			_id: 'U',
			data: []
		},
		{
			sort: 22,
			_id: 'V',
			data: []
		}, {
			sort: 23,
			_id: 'W',
			data: []
		}, {
			sort: 24,
			_id: 'X',
			data: []
		},
		{
			sort: 25,
			_id: 'Y',
			data: []
		}, {
			sort: 26,
			_id: 'Z',
			data: []
		}
	];
	export default {
		name: 'operator-select-city',
		props: {
			position: {
				type: String,
				default: '昆明'
			},
			currentCity: {
				type: Object,
				default: () => ({})
			},
			windowHeight: {
				type: String,
				default: uni.getSystemInfoSync().windowHeight + "px"
			},
			// 开启滑动选择
			sliding: {
				type: Boolean,
				default: true
			},
		},
		data() {
			return {
				hotCitys: [],
				cityData: [],
				scrollIntoId: '',
				city: this.currentCity,
				anchorArr: [],
				// 滑动中选中的具体值
				slidingChoice: "",
				//开始滑动位置
				startY: "",
				// 滑动中当前选中下标
				downIndex: -1,
			}
		},
		computed: {},
		created() {},
		mounted() {
			this.cityData = [];
			this.getoperator();
		},
		methods: {
			//获取运营
			getoperator() {
				this.$httpApi.getCityOperator().then(res => {
					this.hotCitys = res;
					let dataList = deepClone(kList);
					let dataCityLetter = [];
					res.forEach(item => {
						let index = dataList.findIndex(value => value._id == item.letter.toUpperCase());
						if (!dataCityLetter.find((mitem) => mitem == item.letter.toUpperCase())) {
							dataCityLetter.push(item.letter.toUpperCase());
						}
						dataList[index].data.push(item)
					});
					this.anchorArr = dataCityLetter;
					this.cityData = dataList.filter(item => item.data.length > 0);
				})
			},
			show() {
				uni.hideTabBar();
				this.$refs.areaChoose.open();
			},
			close() {
				this.$refs.areaChoose.close()
				setTimeout(()=>uni.showTabBar(),300)
			},
			// 点击城市
			onSelect(city) {
				this.city = city;
				this.$emit('areaComplete', city)
				this.close()
			},
			// 开始滑动
			start(e) {
				// console.log("开始滑动",e);
				// #ifdef MP
				let eY = e.changedTouches[0].clientY
				// #endif
				// #ifdef APP-PLUS
				let eY = e.changedTouches[0].screenY
				// #endif
				this.startY = eY;
				// 计算点击时候下标
				let index = eY / (eY / eY);
				index = parseInt((index - 200) / 40) - 1;
				this.downIndex = index;
			},
			// 开始移动
			move(e) {
				// console.log("开始移动",e);
				// #ifdef MP
				let downY = e.changedTouches[0].clientY;
				// #endif
				// #ifdef APP-PLUS
				let downY = e.changedTouches[0].screenY;
				// #endif

				let gap = this.startY - downY;
				let index = parseInt(gap / (uni.upx2px(gap) / gap) / 40);
				// 选中下标
				let optforIndex = this.downIndex - index;
				if (optforIndex < -1) {
					optforIndex = -1;
				} else if (optforIndex > 21) {
					optforIndex = 21;
				}
				this.slidingChoice = this.anchorArr[optforIndex];
				this.scrollIntoId = this.anchorArr[optforIndex];
			},
			// 滑动结束
			end(e) {
				// console.log("结束滑动",e)
				this.slidingChoice = '';
			},

		}
	}
</script>

<style lang="scss" scoped>
	@import '@/style/mixin.scss';

	.top {
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding-left: 30rpx;
		font-size: 32rpx;
		font-weight: bold;

		.close {
			margin: 30rpx 25rpx;
			height: 50rpx;
			width: 50rpx;
		}
	}


	.select-city-wrap {
		overflow: hidden;
		border-radius: 20rpx 20rpx 0 0;
		background-color: #f6f6f6;
	}

	/* 滑块 */
	.scroll {
		/* background-color: yellow; */
	}

	.name {
		color: #333;
		font-size: 28rpx;
		margin: 30rpx 30rpx;
	}

	/* 城市 */
	.letter-content {
		width: 100%;
		background-color: #f6f6f6;
		line-height: 86rpx;
		font-size: 32rpx;

		.letter {
			color: #606266;
			font-size: 28rpx;
			line-height: 44rpx;
			text-align: center;
			margin-left: 15rpx;
		}
	}

	.city-item {
		display: flex;
		flex-wrap: wrap;
		flex-direction: row;
		margin-left: 20rpx;

		.city-item-view {
			width: 180rpx;
			height: 55rpx;
			line-height: 50rpx;
			margin: 15rpx;
			border-radius: 6rpx;
			justify-content: center;
			align-items: center;
			background-color: #f6f6f6;
			text-align: center;

			.address-icon {
				width: 25rpx;
				height: 25rpx;
			}
		}

		.city-item-viewa {
			width: 180rpx;
			height: 55rpx;
			margin: 15rpx;
			line-height: 50rpx;
			border-radius: 6rpx;
			justify-content: center;
			align-items: center;
			text-align: center;
			background-color: #f6f6f6;
		}
	}

	.city-item-list {
		background-color: #FFFFFF;

		.city-item-view {
			line-height: 80rpx;
			margin: 0 20rpx;
			border-bottom: 1px solid #f6f6f6;
		}

		.city-item-viewa {
			margin: 15rpx;
			line-height: 80rpx;
			border-bottom: 1px solid #f6f6f6;
		}
	}

	.city-item-text {
		color: #999;
		font-size: 28rpx;
	}

	.city-item-texta {
		font-size: 28rpx;
		color: $themeColor;
	}

	/* 右锚点 */
	.anchor {
		/* background-color: pink; */
		position: fixed;
		right: 20rpx;
		top: 100rpx;
		z-index: 10;
		flex-direction: row;
	}

	.anchor-item {
		&.chooseItem {
			color: #fff;
			background: linear-gradient(90deg, #FF9A52 0%, #FF6A32 100%);
			border-radius: 0rpx 100rpx 100rpx 0rpx;

			.anchor-text {
				color: #fff;
			}
		}

		align-items: center;
		flex-direction: row;
		padding: 10rpx 0;
		margin: 5rpx 0;
		text-align: center;
	}

	.anchor-text-position {
		height: 40rpx;
		width: 40rpx;
		text-align: center;
		line-height: 40rpx;
		font-size: 32rpx;
		color: #333;
		background-color: #E5E5E5;
		border-radius: 20rpx;
	}

	.anchor-text {
		font-size: 32rpx;
		line-height: 40rpx;
		padding: 0 15rpx;
		color: #909199;
	}
</style>
